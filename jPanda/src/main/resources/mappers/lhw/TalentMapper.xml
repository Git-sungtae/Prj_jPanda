<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="talentMapper">

	<!-- 재능 리스트 불러오기 with 필터 -->
	<select id="selectTalentListByFilters" resultType="BoardTalent" parameterType="BoardFilters">
		SELECT t.talent_no, t.seller_id, t.main_img, t.title, 
		t.summary, t.bamboo, t.sale_bamboo, NVL((ROUND(AVG(r.bamboo_score) * 2) / 2),0) AS bambooScore, t.view_count, t.reg_date
		FROM talent t, review r
		WHERE t.talent_no = r.talent_no(+)
		AND   t.talent_status = '게시중'
		<if test="upperCategoryNo != null and upperCategoryNo != ''">
		AND	  t.upper_category_no = #{upperCategoryNo}
		</if>
		<if test="lowerCategoryNo != null and lowerCategoryNo != ''">
		AND	  t.lower_category_no = #{lowerCategoryNo}
		</if>
		GROUP BY r.bamboo_score, t.talent_no, t.seller_id, t.main_img, t.title, t.summary, t.bamboo, t.sale_bamboo, 
				 t.talent_status, t.reg_date, t.view_count
		ORDER BY 
		<if test="filter != null and filter != ''">
			<choose>
				<when test="filter eq 'reg_date'"> reg_date DESC</when>
				<when test="filter eq 'view_count'"> view_count DESC</when>
				<when test="filter eq 'bambooScore'"> bambooScore DESC</when>
				<when test="filter eq 'sale_bamboo'"> sale_bamboo DESC </when>
				<otherwise> sale_bamboo ASC</otherwise>
			</choose>
		</if>
	</select>
	
	<!-- 대분류 카테고리 리스트  -->
	<select id="selectUpperCategoryList" resultType="BoardCategory" >
		SELECT *
		FROM category
		WHERE upper_category_no IS null
	</select>
	
	<!-- 중분류 카테고리 리스트  -->
	<select id="selectLowerCategoryListByUpperCategoryNo" resultType="BoardCategory" parameterType="Long">
		SELECT *
		FROM category
		WHERE upper_category_no = #{upperCategoryNo}
	</select>
	
	<!-- 상세 페이지  -->
	<select id="selectBoardTalentByTalentNo" resultType="BoardTalent" parameterType="Long">
		SELECT talent_no, title, seller_id, main_img, summary, bamboo, sale_bamboo, content
		FROM talent
		WHERE talent_no = #{talentNo}
	</select> 
	
	<!-- 리뷰 리스트 셀렉트  -->
	<select id="selectReviewListByTalentNo" parameterType="Long" resultType="BoardReview">
		SELECT reviewer_id, content, review_date, bamboo_score, review_no
		FROM review
		WHERE talent_no = #{talentNo}
		ORDER BY review_date DESC
	</select>
	
	<!-- 리뷰 인서트  -->	
	<insert id="insertReview" parameterType="BoardReview">
		INSERT INTO review (talent_no, reviewer_id, content, review_date, bamboo_score, review_no) 
    	VALUES (#{talentNo}, #{reviewerId}, #{content}, #{reviewDate}, #{bambooScore}, REVIEW_NO_SEQ.nextval)
	</insert>
	
	<!-- 리뷰 업데이트  -->	
	<update id="updateReview" parameterType="BoardReview">
		UPDATE review SET content = #{content}, bamboo_score = #{bambooScore}
		WHERE review_no = #{reviewNo}
	</update>
	
	<!-- 리뷰 딜리트  -->	
	<delete id="deleteReview" parameterType="BoardReview">
		DELETE FROM review
		WHERE review_no = #{reviewNo}
	</delete>
	
	<!-- 게시글 삭제(업데이트) -->
	<update id="updateTalent" parameterType="Long">
		UPDATE talent SET talent_status = '판매종료'
		WHERE talent_no = #{talentNo}
	</update>
	
	<!-- 리뷰 인서트 검증 -->
	<select id="selectBambooUseListByTalentNo" parameterType="Long" resultType="BoardBambooUse">
		SELECT *
		FROM bamboo_use
		WHERE talent_no = #{talentNo}
	</select>
	
	<!-- 재능 구매자 정보 인서트  -->
	<insert id="insertBambooUse" parameterType="BoardBambooUse">
		INSERT INTO bamboo_use (buyer_id, talent_no, purchase_date, use_bamboo, purchase_no)
		VALUES (#{buyerId}, #{talentNo}, SYSDATE, #{useBamboo}, PURCHASE_NO_SEQ.nextval)
	</insert>
	
	<!-- 재능 구매자 잔여 포인트 조회 --> 
	<select id="selectChargeBambooByByuerId" parameterType="String" resultType="BoardBambooCharge">
		SELECT c.charge_bamboo - u.use_bamboo AS resultBamboo, c.charge_bamboo, c.charger_id
		FROM bamboo_charge c, bamboo_use u
		WHERE c.charger_id = u.buyer_id
		AND c.charger_id = #{buyerId}
	</select>
	
</mapper>




