<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="chatMapper">
	<select id="selectChatListByMemberIdAndPartnerId" parameterType="Map" resultType="Chat">
		SELECT *
		FROM chat
		WHERE (receiver_id = #{memberId} AND sender_id = #{partnerId})
			OR (sender_id = #{memberId} AND receiver_id = #{partnerId})
		ORDER BY chat_date ASC
	</select>
	
	<select id="selectPartnerListByMemberId" parameterType="String" resultType="ChatPartner">	
		SELECT member_id, name, SUM(unread_count) AS unread_count
		FROM (
			    SELECT DISTINCT(c.sender_id) as member_id, m.name, COUNT(CASE WHEN c.read = 'F' THEN 1 END) AS unread_count
			    FROM chat c JOIN member m ON(c.sender_id = m.member_id)
			    WHERE c.receiver_id = #{memberId}
			    GROUP BY c.sender_id, m.name
			    UNION ALL
			    SELECT DISTINCT(c.receiver_id) as member_id, m.name, 0 AS unread_count
			    FROM chat c JOIN member m ON(c.receiver_id = m.member_id)
			    WHERE c.sender_id = #{memberId}
			    GROUP BY c.receiver_id, m.name
			)
		GROUP BY member_id, name
		ORDER BY name
	</select>
	
	<insert id="insertChat" parameterType="Chat">
		INSERT INTO 
			chat(chat_no, sender_id, receiver_id, message, chat_date, read) 
			VALUES(chat_id_seq.nextval, #{senderId}, #{receiverId}, #{message}, #{chatDate}, #{read})
	</insert>
	
	<update id="updateChatByReaderIdAndPartnerId" parameterType="Map">
		UPDATE chat
		 SET read = 'T'
		WHERE receiver_id = #{readerId}
			AND sender_id = #{partnerId} 
			AND read = 'F'
	</update>
</mapper>